{"version":3,"sources":["App.js","index.js"],"names":["DATA_VALUES","date","typeNull","typeString","typeNumeric","typeBoolean","start","bucket1","bucket2","bucket3","i","length","push","sumSameBuckets","bucket","findCss","someObject","Object","keys","reduce","a","b","BucketContainer","props","bucketSummed","nameOfTheLargest","largestNumInBucket","graphTitles","className","map","entry","style","width","height","App","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HAiDA,I,2CA9CMA,G,WAAc,CAClB,CACEC,KAAM,cACNC,SAAU,GACVC,WAAY,GACZC,YAAa,EACbC,YAAa,IAEf,CACEJ,KAAM,cACNC,SAAU,GACVC,WAAY,IACZC,YAAa,EACbC,YAAa,IAEf,CACEJ,KAAM,cACNC,SAAU,GACVC,WAAY,GACZC,YAAa,EACbC,YAAa,IAEf,CACEJ,KAAM,cACNC,SAAU,GACVC,WAAY,IACZC,YAAa,EACbC,YAAa,GAEf,CACEJ,KAAM,cACNC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbC,YAAa,OAIXC,EAAQN,EAAY,GAAGC,KACvBM,EAAU,GACVC,EAAU,GACVC,EAAU,GAKPC,EAAI,EAAGA,EAAIV,EAAYW,OAAQD,IAClCV,EAAYU,GAAGT,KAAOK,EAAQ,IAChCC,EAAQK,KAAKZ,EAAYU,IAChBV,EAAYU,GAAGT,KAAOK,EAAQ,IACvCE,EAAQI,KAAKZ,EAAYU,IAEzBD,EAAQG,KAAKZ,EAAYU,IAK7B,IAAMG,EAAiB,SAACC,GAMtB,IALA,IAAIZ,EAAW,EACXC,EAAa,EACbC,EAAc,EACdC,EAAc,EAETK,EAAI,EAAGA,EAAII,EAAOH,OAAQD,IACjCR,GAAsBY,EAAOJ,GAAGR,SAChCC,GAA0BW,EAAOJ,GAAGP,WACpCC,GAA4BU,EAAOJ,GAAGN,YACtCC,GAA4BS,EAAOJ,GAAGL,YAExC,MAAO,CACLH,WACAC,aACAC,cACAC,gBAKEU,EAAU,SAACC,GACf,OAAOC,OAAOC,KAAKF,GAAYG,QAAO,SAAUC,EAAGC,GACjD,OAAOL,EAAWI,GAAKJ,EAAWK,GAAKD,EAAIC,MAIzCC,EAAkB,SAACC,GACvB,IAAMC,EAAeD,EAAMV,eAAeU,EAAMT,QAC1CW,EAAmBF,EAAMR,QAAQS,GACjCE,EAAqBF,EAAaC,GAElCE,EAAcV,OAAOC,KAAKM,GAEhC,OACE,sBAAKI,UAAU,SAAf,UACA,gEAAmCH,EAAnC,kBAAoEC,KACjEC,EAAYE,KAAI,SAACC,GAAD,OACf,sBAAKF,UAAU,cAAf,UACE,8BAAIE,EAAJ,MAAcN,EAAaM,MAC3B,qBACEF,UAAWE,IAAUL,EAAmB,UAAYK,EACpDC,MAAO,CACLC,MAAOR,EAAaM,GACpBG,OAAQ,QANoBH,UA0C3BI,MAzBf,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CACEO,KAAMnC,EACNe,QAASA,EACTD,OAAQP,EACRM,eAAgBA,IAElB,cAAC,EAAD,CACEsB,KAAMnC,EACNe,QAASA,EACTD,OAAQN,EACRK,eAAgBA,IAElB,cAAC,EAAD,CACEsB,KAAMnC,EACNe,QAASA,EACTD,OAAQL,EACRI,eAAgBA,QChIxBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.80e2eaec.chunk.js","sourcesContent":["import \"./App.css\";\n// import BucketContainer from \"./BucketContainer\";\n\nconst DATA_VALUES = [\n  {\n    date: 1604440297969,\n    typeNull: 12,\n    typeString: 21,\n    typeNumeric: 7,\n    typeBoolean: 18,\n  },\n  {\n    date: 1604440297970,\n    typeNull: 16,\n    typeString: 100,\n    typeNumeric: 3,\n    typeBoolean: 10,\n  },\n  {\n    date: 1604440315789,\n    typeNull: 15,\n    typeString: 29,\n    typeNumeric: 4,\n    typeBoolean: 21,\n  },\n  {\n    date: 1604440330496,\n    typeNull: 44,\n    typeString: 230,\n    typeNumeric: 3,\n    typeBoolean: 0,\n  },\n  {\n    date: 1604440330882,\n    typeNull: 76,\n    typeString: 10,\n    typeNumeric: 19,\n    typeBoolean: 160,\n  },\n]\n\nconst start = DATA_VALUES[0].date;\nconst bucket1 = [];\nconst bucket2 = [];\nconst bucket3 = [];\n\n// SOLUTION\n// we have three buckets and pass data on some condition\n\nfor (let i = 0; i < DATA_VALUES.length; i++) {\n  if (DATA_VALUES[i].date - start < 10 * 1000) {\n    bucket1.push(DATA_VALUES[i]);\n  } else if (DATA_VALUES[i].date - start < 20 * 1000) {\n    bucket2.push(DATA_VALUES[i]);\n  } else {\n    bucket3.push(DATA_VALUES[i]);\n  }\n}\n\n//this func gets the bucket and sum all values for a key, returning the sums for each jey\nconst sumSameBuckets = (bucket) => {\n  let typeNull = 0;\n  let typeString = 0;\n  let typeNumeric = 0;\n  let typeBoolean = 0;\n\n  for (let i = 0; i < bucket.length; i++) {\n    typeNull = typeNull + bucket[i].typeNull;\n    typeString = typeString + bucket[i].typeString;\n    typeNumeric = typeNumeric + bucket[i].typeNumeric;\n    typeBoolean = typeBoolean + bucket[i].typeBoolean;\n  }\n  return {\n    typeNull,\n    typeString,\n    typeNumeric,\n    typeBoolean,\n  };\n};\n\n//Gets all the keys and calculates which is dominant key - returns a string value\nconst findCss = (someObject) => {\n  return Object.keys(someObject).reduce(function (a, b) {\n    return someObject[a] > someObject[b] ? a : b;\n  });\n};\n\nconst BucketContainer = (props) => {\n  const bucketSummed = props.sumSameBuckets(props.bucket);\n  const nameOfTheLargest = props.findCss(bucketSummed);\n  const largestNumInBucket = bucketSummed[nameOfTheLargest];\n\n  const graphTitles = Object.keys(bucketSummed);\n\n  return (\n    <div className=\"bucket\">\n    <h1>The largest in this bucket is {nameOfTheLargest} with value of {largestNumInBucket}</h1>\n      {graphTitles.map((entry) => (\n        <div className=\"singleGraph\" key={entry}>\n          <p>{entry} : {bucketSummed[entry]}</p>\n          <div\n            className={entry === nameOfTheLargest ? \"largest\" : entry}\n            style={{\n              width: bucketSummed[entry],\n              height: 10,\n            }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\n//Pass the props of the buckets\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BucketContainer\n        data={DATA_VALUES}\n        findCss={findCss}\n        bucket={bucket1}\n        sumSameBuckets={sumSameBuckets}\n      />\n      <BucketContainer\n        data={DATA_VALUES}\n        findCss={findCss}\n        bucket={bucket2}\n        sumSameBuckets={sumSameBuckets}\n      />\n      <BucketContainer\n        data={DATA_VALUES}\n        findCss={findCss}\n        bucket={bucket3}\n        sumSameBuckets={sumSameBuckets}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}